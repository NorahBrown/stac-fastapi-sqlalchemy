default:
  image: python:3.10-buster

stages:
  - set-env-vars
  - build
  - deploy
  - update

# ref: https://stackoverflow.com/questions/62165333/gitlab-ci-setting-a-variable-within-another-variable
variables:
  VERSION: 2.4.5
  DC_APP: stac-fastapi

include:
  - project: "Datacube/sop/ci-configs"
    ref: main # git branch (can be a specific branch, a tag or a commit #)
    file:
      - "before-script/.predefined-script.yml" # install-aws-cli and set-job-aws-credentials
      - "stages/set-env-vars/set-env-vars.yml" # Sets AWS credentials to .env for sharing with other jobs.
      - "stages/deploy/deploy-refresh-ec2.yml"

  - project: "Datacube/sop/ci-configs"
    ref: main # git branch (can be a specific branch, a tag or a commit #)
    file: stages/build/build-tarball-template.yml
    inputs:
      appname: sqlalchemy

make-sqlalchemy-tarball:
  variables:
    TARBALL: $DC_APP-$VERSION-venv.tar.gz
  script:
    - cd /var/venv && find . -type f -name '*.pyc' | while read f; do n=$(echo $f | sed 's/__pycache__\///' | sed 's/.cpython-[0-9]*//'); cp $f $n; done;
    - cd /var/venv && find . -type d -a -name '__pycache__' -print0 | xargs -0 rm -rf
    - py3clean /var/venv/$DC_APP
    - pip uninstall -y pip
    - ls "/var/venv/$DC_APP"
    - cp stac_fastapi/sqlalchemy/serializers.py /var/venv/$DC_APP/lib/python3.10/site-packages/stac_fastapi/sqlalchemy/serializers.py
    - cp stac_fastapi/sqlalchemy/app.py /var/venv/$DC_APP/lib/python3.10/site-packages/stac_fastapi/sqlalchemy/app.py
    - cp alembic/versions/6a37bc5b3b65_change_collection_description_column_.py /var/venv/$DC_APP/lib/python3.10/site-packages/alembic/versions/
    - tar -pczf $CI_PROJECT_DIR/$TARBALL /var/venv/$DC_APP/
    - ls $CI_PROJECT_DIR
  when: manual

deploy-sqlalchemy-tarball:
  stage: deploy
  needs:
    - set-aws-credentials
    - make-sqlalchemy-tarball
  tags:
    - CICD
  variables:
    TARBALL: $DC_APP-$VERSION-venv.tar.gz
  before_script:
    - !reference [".predefined-script", "update-os"]
    - !reference [".predefined-script", "upgrade-pip"]
    - !reference [".predefined-script", "set-job-aws-credentials"]
    - !reference [".predefined-script", "install-awscli"]
  script:
    - echo COPY $ENV
    - aws s3 cp $TARBALL s3://fgp-datacube-$ENV-templates/datacube-apps/server-app/stac-api/
  when: manual

# Refresh ec2 instances only when needed
refresh-ec2-oapi-internal:
  extends: .refresh-ec2
  stage: update
  variables:
    ASG_NAME: asg-oapi-internal

refresh-ec2-oapi-public:
  extends: .refresh-ec2
  stage: update
  variables:
    ASG_NAME: asg-oapi-public
